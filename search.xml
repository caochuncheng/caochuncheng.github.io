<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/09/hello-world/"/>
      <url>/2018/05/09/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>markdown-to-pdf</title>
      <link href="/2016/02/29/markdown-to-pdf/"/>
      <url>/2016/02/29/markdown-to-pdf/</url>
      <content type="html"><![CDATA[<p>Markdown转换成PDF，基于OS X EI Capitan系统命令行操作。</p><a id="more"></a><h2 id="安装相关程序"><a href="#安装相关程序" class="headerlink" title="安装相关程序"></a>安装相关程序</h2><p>1.安装<a href="http://pandoc.org/installing.html" target="_blank" rel="noopener">Pandoc</a>，下载安装包<a href="https://github.com/jgm/pandoc/releases/download/1.16.0.2/pandoc-1.16.0.2-osx.pkg" target="_blank" rel="noopener">pandoc-1.16.0.2-osx.pkg</a>，下载完成直接通过pkg包安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> pandoc</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/pandoc</span><br></pre></td></tr></table></figure><p>2.安装<a href="http://www.tug.org/mactex/morepackages.html" target="_blank" rel="noopener">BasicTeX</a>，下载<a href="http://tug.org/cgi-bin/mactex-download/BasicTeX.pkg" target="_blank" rel="noopener">BasicTeX.pkg</a>，下载完成直接通过pkg包安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 将以下目录添加到PATH路径中</span></span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/texlive/2015basic/bin/universal-darwin:<span class="variable">$&#123;PATH&#125;</span></span><br><span class="line"><span class="built_in">which</span> tlmgr</span><br><span class="line">/usr/<span class="built_in">local</span>/texlive/2015basic/bin/universal-darwin/tlmgr</span><br></pre></td></tr></table></figure><p>安装必须的组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tlmgr install collection-fontsrecommended</span><br></pre></td></tr></table></figure><p>此命令有可能会提示更新操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">===============================================================================</span><br><span class="line">tlmgr itself needs to be updated.</span><br><span class="line">Please <span class="keyword">do</span> this via either</span><br><span class="line">  tlmgr update --self</span><br><span class="line">or by getting the latest updater <span class="keyword">for</span> Unix-ish systems:</span><br><span class="line">  http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.sh</span><br><span class="line">and/or Windows systems:</span><br><span class="line">  http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.exe</span><br><span class="line">Then <span class="built_in">continue</span> with other updates as usual.</span><br><span class="line">===============================================================================</span><br></pre></td></tr></table></figure><p>执行以下操作即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tlmgr update --self</span><br></pre></td></tr></table></figure><p>以上操作之后软件安装完成，可以使用pandoc和basicTeX操作各种文档的转换</p><h2 id="小例子"><a href="#小例子" class="headerlink" title="小例子"></a>小例子</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pandoc xxx.md -s -o xxx.pdf --latex-engine=xelatex --template=/path/to/default \</span><br><span class="line">-V paper=a4paper -V fontsize=20pt -V mainfont=<span class="string">"STHeitiSC-Light"</span></span><br></pre></td></tr></table></figure><ul><li>latex-engine 指定使用的latex引擎</li><li>mainfont 指定使用的字体，没这个指定操作不能正常的转换中文</li><li>STHeitiSC-Light 字体名称，根据操作系统的字体册app查询，即可以使用<ul><li>“字体册”位于“应用程序”文件夹中（在 Finder 中选取“前往”&gt;“应用程序”）</li></ul></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://afoo.me/posts/2013-07-10-how-to-transform-chinese-pdf-with-pandoc.html" target="_blank" rel="noopener">pandoc中文pdf转换攻略</a></p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandoc </tag>
            
            <tag> mardown </tag>
            
            <tag> pdf </tag>
            
            <tag> BasicTeX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Erlang-Centos6.6-Install</title>
      <link href="/2015/08/25/Erlang-Centos66-Install/"/>
      <url>/2015/08/25/Erlang-Centos66-Install/</url>
      <content type="html"><![CDATA[<p>在centos6.6系统上安装erlang R17.5操作小记录。</p><a id="more"></a><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>1.确保服务器可以连接网络，确保yum源正常可以，推荐使用国内 163 yum 源。<br>可参考以下操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br><span class="line">mv CentOS-Base.repo  CentOS-Base.repo.bak</span><br><span class="line">wget http://mirrors.163.com/.<span class="built_in">help</span>/CentOS-Base-163.repo</span><br><span class="line">mv CentOS-Base-163.repo  CentOS-Base.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure></p><p>2.下载erlang源码包<a href="http://www.erlang.org/download/otp_src_17.5.tar.gz" target="_blank" rel="noopener">erlang R17.5</a><br>解压源码包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zvxf otp_src_17.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> otp_src_17.5</span><br></pre></td></tr></table></figure></p><h2 id="配置检查"><a href="#配置检查" class="headerlink" title="配置检查"></a>配置检查</h2><p>A.执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-hipe --<span class="built_in">enable</span>-threads --<span class="built_in">enable</span>-smp-support --<span class="built_in">enable</span>-kernel-poll --<span class="built_in">enable</span>-unicode --without-javac --without-wx</span><br></pre></td></tr></table></figure></p><p>B.错误提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">configure: error: No curses library <span class="built_in">functions</span> found</span><br><span class="line">configure: error: /bin/sh <span class="string">'/root/otp_src_17.5/erts/configure'</span> failed <span class="keyword">for</span> erts</span><br></pre></td></tr></table></figure></p><p>C.安装ncurses-devel可解决<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ncurses-devel</span><br></pre></td></tr></table></figure></p><p>D.提示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS DISABLED  **********************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">crypto         : No usable OpenSSL found</span><br><span class="line">jinterface     : No Java compiler found</span><br><span class="line">odbc           : ODBC library - link check failed</span><br><span class="line">orber          : No C++ compiler found</span><br><span class="line">ssh            : No usable OpenSSL found</span><br><span class="line">ssl            : No usable OpenSSL found</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS INFORMATION  *******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">wx             : wxWidgets not found, wx will NOT be usable</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  DOCUMENTATION INFORMATION  ******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">documentation  : </span><br><span class="line">                 fop is missing.</span><br><span class="line">                 Using fakefop to generate placeholder PDF files.</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br></pre></td></tr></table></figure></p><p>E.安装以下软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install openssl-devel </span><br><span class="line">yum -y install unixODBC-devel</span><br><span class="line">yum -y install gcc-c++</span><br></pre></td></tr></table></figure></p><p>F.执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="built_in">enable</span>-hipe --<span class="built_in">enable</span>-threads --<span class="built_in">enable</span>-smp-support --<span class="built_in">enable</span>-kernel-poll --<span class="built_in">enable</span>-unicode --without-javac --without-wx</span><br></pre></td></tr></table></figure></p><p>G.结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS DISABLED  **********************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">jinterface     : Java compiler disabled by user</span><br><span class="line">wx             : User gave --without-wx option</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  APPLICATIONS INFORMATION  *******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">wx             : wxWidgets not found, wx will NOT be usable</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br><span class="line">*********************************************************************</span><br><span class="line">**********************  DOCUMENTATION INFORMATION  ******************</span><br><span class="line">*********************************************************************</span><br><span class="line"></span><br><span class="line">documentation  : </span><br><span class="line">                 fop is missing.</span><br><span class="line">                 Using fakefop to generate placeholder PDF files.</span><br><span class="line"></span><br><span class="line">*********************************************************************</span><br></pre></td></tr></table></figure></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>我们安装时并没有指定安装目录，即使用默认目录即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/lib/erlang/</span><br></pre></td></tr></table></figure></p><p>安装操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p><p>结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/install -c -m 644 <span class="string">"/root/otp_src_17.5/OTP_VERSION"</span> <span class="string">"/usr/local/lib/erlang/releases/17"</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line">rm -f erl</span><br><span class="line">rm -f erlc</span><br><span class="line">rm -f epmd</span><br><span class="line">rm -f run_erl</span><br><span class="line">rm -f to_erl</span><br><span class="line">rm -f dialyzer</span><br><span class="line">rm -f typer</span><br><span class="line">rm -f escript</span><br><span class="line">rm -f ct_run</span><br><span class="line">ln -s ../lib/erlang/bin/erl erl</span><br><span class="line">ln -s ../lib/erlang/bin/erlc erlc</span><br><span class="line">ln -s ../lib/erlang/bin/epmd epmd</span><br><span class="line">ln -s ../lib/erlang/bin/run_erl run_erl</span><br><span class="line">ln -s ../lib/erlang/bin/to_erl to_erl</span><br><span class="line">ln -s ../lib/erlang/bin/dialyzer dialyzer</span><br><span class="line">ln -s ../lib/erlang/bin/typer typer</span><br><span class="line">ln -s ../lib/erlang/bin/escript escript</span><br><span class="line">ln -s ../lib/erlang/bin/ct_run ct_run</span><br></pre></td></tr></table></figure></p><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><p>执行以下命令，并对比结果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">erl</span><br><span class="line">Erlang/OTP 17 [erts-6.4] [<span class="built_in">source</span>] [64-bit] [smp:2:2] [async-threads:10] [hipe] [kernel-poll:<span class="literal">false</span>]</span><br><span class="line"></span><br><span class="line">Eshell V6.4  (abort with ^G)</span><br><span class="line">1&gt; crypto:start().</span><br><span class="line">ok</span><br><span class="line">2&gt; erlang:halt().</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>1.<a href="http://blog.csdn.net/mycwq/article/details/39524847" target="_blank" rel="noopener">Centos6.5安装erlang过程及问题总结</a><br>2.<a href="http://blog.csdn.net/chszs/article/details/28638305" target="_blank" rel="noopener">CentOS 6.5安装Erlang/OTP 17.0</a></p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> erlang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> erlang </tag>
            
            <tag> centos6.6 </tag>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS-扫描二维码/条形码</title>
      <link href="/2015/05/29/iOS-%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%9D%A1%E5%BD%A2%E7%A0%81/"/>
      <url>/2015/05/29/iOS-%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%9D%A1%E5%BD%A2%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>扫描二维码/条形码功能demo演示，本项目提供使用iOS SDK (7以上)的版本自带的AVFoundation框架实现扫码功能，同时演示使用<a href="https://github.com/bmorton/ZBarSDK" target="_blank" rel="noopener">ZBarSDK</a>扫码库的示例。</p><a id="more"></a><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>本项目代码主要参考学习了以下作品:<br>1.代码项目参考<a href="http://code4app.com/ios/ios7%E8%87%AA%E5%B8%A6%E7%9A%84%E6%89%AB%E6%8F%8F%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%8A%9F%E8%83%BD/529c2e95cb7e843c0a8b4c40" target="_blank" rel="noopener">ios7自带的扫描二维码功能</a><br>2.<a href="http://blog.cnbluebox.com/blog/2014/08/26/ioser-wei-ma-sao-miao/" target="_blank" rel="noopener">IOS二维码扫描,你需要注意的两件事</a><br>3.<a href="http://blog.txx.im/blog/2014/05/29/qrcode-detect-with-avfoundation/" target="_blank" rel="noopener">關於iOS原生條碼掃描，你需要注意的兩三事</a> </p><h2 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h2><p>跳转<a href="https://github.com/caochuncheng/CBarCode" target="_blank" rel="noopener">CBarCode</a><br>下载并运行测试体验，同时要查看本文参考的作品，了解相应的处理过程。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>学习一个未知的小功能，了解一个对于自己是新的知识点，还是需要测试和体验才能知道得更多。</p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> ios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
            <tag> bar code reader </tag>
            
            <tag> ZBarSDK </tag>
            
            <tag> AVFoundation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>youtube-视频下载</title>
      <link href="/2015/04/07/youtube-%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/"/>
      <url>/2015/04/07/youtube-%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/</url>
      <content type="html"><![CDATA[<p>下载<a href="https://www.youtube.com/" target="_blank" rel="noopener">youtube视频</a>的方式小结，其中包括下载视频的解说词，一般针对国外公开课视频的下载，在听课的过程中可以自动的对应相应的字幕，方便学习，提高学习效率。本文使用的下载方式比较原始，对于批量下载不太方便，仅供参考、参照。</p><a id="more"></a><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>基本mac OSX 10.9.4 系统上书写，并测试，不同系统环境请相应转转换</p><h2 id="下载视频"><a href="#下载视频" class="headerlink" title="下载视频"></a>下载视频</h2><p>1.在Google Chrome浏览器打开Youtube视频，通过浏览器地址栏复制获取要下载的视频的URL<br> <img src="../../../../images/1.jpg" alt="打开视频"><br>2.使用Google Chrome浏览器打开一个新的标签页，并访问<a href="http://en.savefrom.net/?rmode=false" target="_blank" rel="noopener">en.savefrom.net</a>站点，把要下载的视频的URL输入，并点击【Download】按钮，如下图所示：<br> <img src="../../../../images/2.jpg" alt="下载视频"><br>3.即可以选择你所需要的视频格式直行下载</p><h2 id="下载解说词"><a href="#下载解说词" class="headerlink" title="下载解说词"></a>下载解说词</h2><p>1.在Google Chrome浏览器打开Youtube视频，这里可以点击不要播放视频<br>2.使用Google Chrome打开开发者工具，并切换到console页面，运行以下的JavaScript脚本代码即可以根据需要下载此视频相应的解说词<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下载此视频[youtube]的中文解说词 xml文件</span></span><br><span class="line"><span class="comment">// lang=zh-CN 通过修改此处可以下载相应语言的解说词</span></span><br><span class="line"><span class="comment">// 按回车即执行此脚本</span></span><br><span class="line"><span class="keyword">var</span> tts_url = yt.getConfig(<span class="string">"TTS_URL"</span>); <span class="comment">//"TTS_URL"这个标记名称一般不会改变</span></span><br><span class="line"><span class="keyword">var</span> xml_url = tts_url + <span class="string">"&amp;type=track"</span> + <span class="string">"&amp;lang=zh-CN"</span> + <span class="string">"&amp;name"</span> + <span class="string">"&amp;kind="</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">a.href = xml_url;</span><br><span class="line">a.download = <span class="string">'xxxxx.xml'</span>;</span><br><span class="line">a.click();</span><br></pre></td></tr></table></figure></p><p>3.具体可以参照下图:<br> <img src="../../../../images/3.jpg" alt="打开执行脚本窗口"><br>4.执行并弹窗提示下载<br> <img src="../../../../images/4.jpg" alt="下载解说词"></p><h2 id="解说词格式转换"><a href="#解说词格式转换" class="headerlink" title="解说词格式转换"></a>解说词格式转换</h2><p>1.下载<a href="http://sourceforge.net/projects/google2srt/files/Google2SRT/" target="_blank" rel="noopener">Google2SRT</a>字幕转换工具<br>2.相关操作提示如下图所示：<br> <img src="../../../../images/5.jpg" alt="Google2SRT"></p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> youtube </tag>
            
            <tag> 解说词 </tag>
            
            <tag> 视频下载 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS-Simulator-Screen-Shot-Sort</title>
      <link href="/2015/02/15/iOS-Simulator-Screen-Shot-Sort/"/>
      <url>/2015/02/15/iOS-Simulator-Screen-Shot-Sort/</url>
      <content type="html"><![CDATA[<p>将iOS Simulator模拟器APP应用截图分类归类处理方便应用提交使用，APP截图分类有5种:iPad、3.5-Inch、4-Inch、4.7-Inch、5.5-Inch。</p><a id="more"></a><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>基本mac OSX 10.10.2 系统上书写，并测试，不同系统环境请相应转转换</p><h2 id="安装-ImageMagick"><a href="#安装-ImageMagick" class="headerlink" title="安装 ImageMagick"></a>安装 ImageMagick</h2><p>1.脚本需要安装ImageMagick才能使用，安装详见官网<a href="http://www.imagemagick.org" target="_blank" rel="noopener">http://www.imagemagick.org</a><br>2.点击前往<a href="http://www.imagemagick.org" target="_blank" rel="noopener">ImageMagick</a><br>3.mac xos 建议使用brew进行安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ImageMagick</span><br></pre></td></tr></table></figure></p><p>4.检查是否安装成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">identify -version</span><br><span class="line">Version: ImageMagick 6.8.7-7 Q16 x86_64 2013-11-27 http://www.imagemagick.org</span><br><span class="line">Copyright: Copyright (C) 1999-2014 ImageMagick Studio LLC</span><br><span class="line">Features: DPC Modules</span><br><span class="line">Delegates: bzlib freetype jng jpeg ltdl png xml zlib</span><br></pre></td></tr></table></figure></p><p>5.关于identify命令请参考<a href="http://www.imagemagick.org/script/identify.php" target="_blank" rel="noopener">ImageMagick-identify</a></p><p>##iOS Simulator模拟器载图<br>1.模拟器生成的载图文件名字存在空格，不便于App Store应用提交，需要脚本自动处理去掉空格，根据不同系统生成的文件名字进行相应的调整，如下：<br>本机生成的载图名称为：iOS Simulator Screen Shot 2015年1月5日 17.38.31.png<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;pngFile&#125;</span>"</span> | sed <span class="string">'s/\.\///g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/ /_/g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/iOS_Simulator_Screen_Shot_//g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/年//g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/月//g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/日//g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/\.//g'</span>)</span><br><span class="line">TargetFile=$(<span class="built_in">echo</span> <span class="variable">$&#123;TargetFile&#125;</span> | sed <span class="string">'s/png/\.png/g'</span>)</span><br></pre></td></tr></table></figure></p><p>另：其中获取带有空格的文件名使用如下脚本处理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find .  -iname <span class="string">"*.png"</span> -print0 | <span class="keyword">while</span> <span class="built_in">read</span> -r -d $<span class="string">'\0'</span> file; </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(echo $file | sed 's/ /\\ /g')</span>"</span>; </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./iOS\ Simulator\ Screen\ Shot\ 2015年1月5日\ 17.38.31.png</span><br><span class="line">./iOS\ Simulator\ Screen\ Shot\ 2015年1月5日\ 17.38.34.png</span><br><span class="line">./iOS\ Simulator\ Screen\ Shot\ 2015年1月5日\ 17.38.57.png</span><br><span class="line">./iOS\ Simulator\ Screen\ Shot\ 2015年1月5日\ 17.39.00.png</span><br></pre></td></tr></table></figure></p><p>2.经过相应的文件名称处理之后，需要使用identify获取png载图的信息进行分类和处理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$identify</span> xxx.png | awk <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">1242x2208</span><br></pre></td></tr></table></figure></p><p>3.根据以上的命令可以获取图片的大小，根据图版的大小进行归类整理，整理的目录如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">~/Desktop/ScreenShot/</span><br><span class="line">                    --3.5-Inch/</span><br><span class="line">                    --4-Inch/</span><br><span class="line">                    --4.7-Inch/</span><br><span class="line">                    --5.5-Inch/</span><br><span class="line">                    --iPad/</span><br></pre></td></tr></table></figure></p><h2 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h2><p><a href="../../../../downloads/code/iOSSimulatorScreenShotSort.sh">点击下载</a></p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> ios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
            <tag> ImageMagick </tag>
            
            <tag> iOSSimulator </tag>
            
            <tag> ScreenShot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IOS APP ICON 生成</title>
      <link href="/2015/01/19/IOS-APP-ICON-%E7%94%9F%E6%88%90/"/>
      <url>/2015/01/19/IOS-APP-ICON-%E7%94%9F%E6%88%90/</url>
      <content type="html"><![CDATA[<p>根据1024x1024大小的icon图片，自动生成IOS APP ICON各种规格的图片和对应的配置文件(Contents.json)，支持最新的IOS 8所有设备应用。</p><a id="more"></a><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>基本mac OSX 10.10.1 系统上书写，并测试，不同系统环境请相应转转换</p><h2 id="安装-ImageMagick"><a href="#安装-ImageMagick" class="headerlink" title="安装 ImageMagick"></a>安装 ImageMagick</h2><p>1.脚本需要安装ImageMagick才能使用，安装详见官网<a href="http://www.imagemagick.org" target="_blank" rel="noopener">http://www.imagemagick.org</a><br>2.点击前往<a href="http://www.imagemagick.org" target="_blank" rel="noopener">ImageMagick</a><br>3.mac xos 建议使用brew进行安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ImageMagick</span><br></pre></td></tr></table></figure></p><p>4.检查是否安装成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -version</span><br></pre></td></tr></table></figure></p><h2 id="使用-ImageMagick-处理生成各种规格的ICON"><a href="#使用-ImageMagick-处理生成各种规格的ICON" class="headerlink" title="使用 ImageMagick 处理生成各种规格的ICON"></a>使用 ImageMagick 处理生成各种规格的ICON</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">convert -resize 72x72   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-72.png"</span></span><br><span class="line">convert -resize 144x144 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-72@2x.png"</span></span><br><span class="line">convert -resize 76x76   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-76.png"</span></span><br><span class="line">convert -resize 152x152 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-76@2x.png"</span></span><br><span class="line">convert -resize 50x50   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-Small-50.png"</span></span><br><span class="line">convert -resize 100x100 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-Small-50@2x.png"</span></span><br><span class="line">convert -resize 29x29   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-Small.png"</span></span><br><span class="line">convert -resize 58x58   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-Small@2x.png"</span></span><br><span class="line">convert -resize 40x40   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-Spotlight-40.png"</span></span><br><span class="line">convert -resize 80x80   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/ipad-Icon-Spotlight-40@2x.png"</span></span><br><span class="line">convert -resize 57x57   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-57.png"</span></span><br><span class="line">convert -resize 114x114 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-57@2x.png"</span></span><br><span class="line">convert -resize 120x120 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-60@2x.png"</span></span><br><span class="line">convert -resize 180x180 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-60@3x.png"</span></span><br><span class="line">convert -resize 29x29   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-Small.png"</span></span><br><span class="line">convert -resize 58x58   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-Small@2x.png"</span></span><br><span class="line">convert -resize 87x87   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-Small@3x.png"</span></span><br><span class="line">convert -resize 80x80   <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-Spotlight-40@2x.png"</span></span><br><span class="line">convert -resize 120x120 <span class="string">"<span class="variable">$&#123;ICON_FILE&#125;</span>"</span>  <span class="string">"<span class="variable">$&#123;OUTPUT_DIR&#125;</span>/iphone-Icon-Spotlight-40@3x.png"</span></span><br></pre></td></tr></table></figure><h2 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h2><p><a href="../../../../downloads/code/genicon.sh">点击下载</a></p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> ios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
            <tag> icon </tag>
            
            <tag> ImageMagick </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PNG 压缩和优化</title>
      <link href="/2014/09/07/PNG-%E5%8E%8B%E7%BC%A9%E5%92%8C%E4%BC%98%E5%8C%96/"/>
      <url>/2014/09/07/PNG-%E5%8E%8B%E7%BC%A9%E5%92%8C%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>PNG图片有损压缩，无损压缩优化，使用程序加载分析PNG图片，更快速和更节省，提供脚本批量处理文件。提供简单的参数区别处理PNG图片，即是否启用IE6-friendly。</p><a id="more"></a><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>基本mac OSX 10.9.4 系统上书写，并测试，不同系统环境请相应转转换</p><h2 id="安装-pngcrush"><a href="#安装-pngcrush" class="headerlink" title="安装 pngcrush"></a>安装 pngcrush</h2><ol><li>先参考<a href="http://www.mactricksandtips.com/2012/02/installing-and-using-pngcrush-on-your-mac.html" target="_blank" rel="noopener">安装pngcrush</a>，并阅读。</li><li><p>关键步骤<br>a. 下载开源代码<a href="http://sourceforge.net/projects/pmt/files/pngcrush/" target="_blank" rel="noopener">Pngcrush</a><br>b. 操作步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xpvf pngcrush-1.7.76.tar.xz -C ~/Downloads/</span><br><span class="line"><span class="built_in">cd</span> pngcrush-1.7.76</span><br><span class="line">make (执行编译)</span><br><span class="line">sudo mv pngcrush /usr/<span class="built_in">local</span>/bin/</span><br><span class="line">pngcrush -version (检查安装)</span><br></pre></td></tr></table></figure></li><li><p>命令实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngcrush -rem alla -reduce -brute -nofilecheck -blacken -bail -cc srcfile.png outfile.png</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装-pngquant"><a href="#安装-pngquant" class="headerlink" title="安装 pngquant"></a>安装 pngquant</h2><ol><li>根据不同平台，直接下载<a href="http://pngquant.org/" target="_blank" rel="noopener">下载PngQuant</a>Binary版本，Binary版本，不需要编译，直接添加到系统bin即可。做一下link 并使用/usr/local/bin/pngquant可执行。</li><li>检查安装是否正常<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pngquant -h </span><br><span class="line">``` </span><br><span class="line">3. 命令实例</span><br><span class="line">a. 透明过渡颜色比较多的使用</span><br><span class="line">``` bash</span><br><span class="line">pngquant --force --speed=1 --ordered 256 --output outfile.png  srcfile.png</span><br></pre></td></tr></table></figure></li></ol><p>b. 一般情况下使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngquant --iebug --force --speed=1 --ordered 256 --output outfile.png  srcfile.png</span><br></pre></td></tr></table></figure></p><h2 id="批量使用脚本"><a href="#批量使用脚本" class="headerlink" title="批量使用脚本"></a>批量使用脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### PNG无损压缩优化，再有损压缩</span></span><br><span class="line"><span class="comment">### 注: 如果压缩的最终文件大小大于源文件，即使用源文件</span></span><br><span class="line"><span class="comment">### Create Date: 2014-08-11</span></span><br><span class="line"><span class="comment">### Author : caochuncheng2002@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">''</span> ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'=======================================警告==================================='</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" 需要pngcrush的文件目录: /Users/ccc/Downloads/icon"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" 是否覆盖源文件: true or false"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" 是否启用 IE6-friendly alpha: true or false (默认启用)"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" 执行例子: /bin/bash /data/sh/pngcrush.sh PNG目录 isIEBug 是否覆盖"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" /bin/bash /data/sh/pngcrush.sh /Users/ccc/Downloads/icon true false"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" 默认不覆盖"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" 处理图片的路径，不能存在空格等特殊符号"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">" sh /Users/ccc/sh/pngcrush.sh /Users/ccc/Desktop/PngCrush"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'=======================================警告===================================\n'</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">PNG_DIR=<span class="variable">$1</span></span><br><span class="line">IS_IEBUG=<span class="literal">true</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$2</span>"</span> != <span class="string">''</span> ] ; <span class="keyword">then</span></span><br><span class="line">    IS_COVER=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">IS_COVER=<span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$3</span>"</span> != <span class="string">''</span> ] ; <span class="keyword">then</span></span><br><span class="line">    IS_COVER=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">PNG_CRUSH_DIR=<span class="variable">$&#123;PNG_DIR&#125;</span>/PngCrush</span><br><span class="line"></span><br><span class="line"><span class="comment">## 初始化</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$&#123;PNG_CRUSH_DIR&#125;</span> ] ; <span class="keyword">then</span></span><br><span class="line">    mkdir <span class="variable">$&#123;PNG_CRUSH_DIR&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PNG_CRUSH_DIR&#125;</span></span><br><span class="line">mkdir <span class="variable">$&#123;PNG_CRUSH_DIR&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"开始执行压缩 <span class="variable">$&#123;PNG_DIR&#125;</span> 下所有PNG文件\n\n"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pngfile <span class="keyword">in</span> `find <span class="variable">$1</span> -name <span class="string">"*.png"</span>`;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$&#123;pngfile&#125;</span> ] ; <span class="keyword">then</span></span><br><span class="line">TargetPNG=<span class="variable">$&#123;pngfile/$&#123;PNG_DIR&#125;</span>/<span class="variable">$&#123;PNG_CRUSH_DIR&#125;</span>&#125;</span><br><span class="line">TargetPNG_ROOT=<span class="variable">$&#123;TargetPNG%\/*.png&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$&#123;TargetPNG_ROOT&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">mkdir <span class="variable">$&#123;TargetPNG_ROOT&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#有损压缩</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;IS_IEBUG&#125;</span>"</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">pngquant --iebug --speed=1 --force --ordered 256 --output <span class="variable">$&#123;TargetPNG&#125;</span>.png  <span class="variable">$&#123;pngfile&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pngquant --force --speed=1 --ordered 256 --output <span class="variable">$&#123;TargetPNG&#125;</span>.png  <span class="variable">$&#123;pngfile&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#无损优化</span></span><br><span class="line">pngcrush -rem alla -reduce -brute -nofilecheck -blacken -bail -cc <span class="variable">$&#123;TargetPNG&#125;</span>.png <span class="variable">$&#123;TargetPNG&#125;</span></span><br><span class="line"></span><br><span class="line">mv -f <span class="variable">$&#123;TargetPNG&#125;</span>.png <span class="variable">$&#123;TargetPNG&#125;</span></span><br><span class="line"><span class="comment">#判断文件大小</span></span><br><span class="line">SrcFileSize=`ls -l <span class="variable">$&#123;pngfile&#125;</span> | awk <span class="string">'&#123;print $5&#125;'</span>`</span><br><span class="line">TargetFileSize=`ls -l <span class="variable">$&#123;TargetPNG&#125;</span> | awk <span class="string">'&#123;print $5&#125;'</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;TargetFileSize&#125;</span> -gt <span class="variable">$&#123;SrcFileSize&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">\cp -f <span class="variable">$&#123;pngfile&#125;</span> <span class="variable">$&#123;TargetPNG&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;IS_COVER&#125;</span>"</span> = <span class="literal">true</span> ] ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"压缩 <span class="variable">$&#123;pngfile&#125;</span>，并覆盖源文件"</span></span><br><span class="line">mv -f <span class="variable">$&#123;TargetPNG&#125;</span> <span class="variable">$&#123;pngfile&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"压缩 <span class="variable">$&#123;pngfile&#125;</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"生成压缩文件 <span class="variable">$&#123;TargetPNG&#125;</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;IS_COVER&#125;</span>"</span> = <span class="literal">true</span> ] ; <span class="keyword">then</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PNG_CRUSH_DIR&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\n\n<span class="variable">$&#123;PNG_DIR&#125;</span> 下所有PNG文件压缩完成\n"</span></span><br></pre></td></tr></table></figure><h2 id="下载脚本pngcrush-sh"><a href="#下载脚本pngcrush-sh" class="headerlink" title="下载脚本pngcrush.sh"></a>下载脚本pngcrush.sh</h2><p><a href="../../../../downloads/code/pngcrush.sh">点击下载</a></p><p>祝：开心、简单！</p>]]></content>
      
      <categories>
          
          <category> ios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
            <tag> png </tag>
            
            <tag> pngcrush </tag>
            
            <tag> pngquant </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
  
  
    
  
</search>
